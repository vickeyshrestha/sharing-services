// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: stock_trader.proto

package stock_trader

import (
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName string `protobuf:"bytes,1,opt,name=service_name,proto3" json:"service_name,omitempty"`
	Message     string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stock_trader_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_stock_trader_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_stock_trader_proto_rawDescGZIP(), []int{0}
}

func (x *Status) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *Status) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ActionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid            *wrapperspb.Int64Value  `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Symbol         *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Company        *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=company,proto3" json:"company,omitempty"`
	ActionType     *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=action_type,proto3" json:"action_type,omitempty"`
	CurrentValue   *wrapperspb.DoubleValue `protobuf:"bytes,5,opt,name=current_value,proto3" json:"current_value,omitempty"`
	AddedTimestamp *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=added_timestamp,proto3" json:"added_timestamp,omitempty"`
	IsDeleted      *wrapperspb.BoolValue   `protobuf:"bytes,7,opt,name=is_deleted,proto3" json:"is_deleted,omitempty"`
}

func (x *ActionsResponse) Reset() {
	*x = ActionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stock_trader_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionsResponse) ProtoMessage() {}

func (x *ActionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stock_trader_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionsResponse.ProtoReflect.Descriptor instead.
func (*ActionsResponse) Descriptor() ([]byte, []int) {
	return file_stock_trader_proto_rawDescGZIP(), []int{1}
}

func (x *ActionsResponse) GetUid() *wrapperspb.Int64Value {
	if x != nil {
		return x.Uid
	}
	return nil
}

func (x *ActionsResponse) GetSymbol() *wrapperspb.StringValue {
	if x != nil {
		return x.Symbol
	}
	return nil
}

func (x *ActionsResponse) GetCompany() *wrapperspb.StringValue {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *ActionsResponse) GetActionType() *wrapperspb.StringValue {
	if x != nil {
		return x.ActionType
	}
	return nil
}

func (x *ActionsResponse) GetCurrentValue() *wrapperspb.DoubleValue {
	if x != nil {
		return x.CurrentValue
	}
	return nil
}

func (x *ActionsResponse) GetAddedTimestamp() *wrapperspb.StringValue {
	if x != nil {
		return x.AddedTimestamp
	}
	return nil
}

func (x *ActionsResponse) GetIsDeleted() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsDeleted
	}
	return nil
}

var File_stock_trader_proto protoreflect.FileDescriptor

var file_stock_trader_proto_rawDesc = []byte{
	0x0a, 0x12, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x72, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x46, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xb6, 0x03, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x36,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x3e, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x46, 0x0a, 0x0f, 0x61, 0x64,
	0x64, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0f, 0x61, 0x64, 0x64, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x3a, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x32, 0xd3,
	0x01, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x5b, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1a, 0x12, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x72, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x66, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x1d, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x2f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_stock_trader_proto_rawDescOnce sync.Once
	file_stock_trader_proto_rawDescData = file_stock_trader_proto_rawDesc
)

func file_stock_trader_proto_rawDescGZIP() []byte {
	file_stock_trader_proto_rawDescOnce.Do(func() {
		file_stock_trader_proto_rawDescData = protoimpl.X.CompressGZIP(file_stock_trader_proto_rawDescData)
	})
	return file_stock_trader_proto_rawDescData
}

var file_stock_trader_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_stock_trader_proto_goTypes = []interface{}{
	(*Status)(nil),                 // 0: stock_trader.Status
	(*ActionsResponse)(nil),        // 1: stock_trader.ActionsResponse
	(*wrapperspb.Int64Value)(nil),  // 2: google.protobuf.Int64Value
	(*wrapperspb.StringValue)(nil), // 3: google.protobuf.StringValue
	(*wrapperspb.DoubleValue)(nil), // 4: google.protobuf.DoubleValue
	(*wrapperspb.BoolValue)(nil),   // 5: google.protobuf.BoolValue
	(*emptypb.Empty)(nil),          // 6: google.protobuf.Empty
}
var file_stock_trader_proto_depIdxs = []int32{
	2, // 0: stock_trader.ActionsResponse.uid:type_name -> google.protobuf.Int64Value
	3, // 1: stock_trader.ActionsResponse.symbol:type_name -> google.protobuf.StringValue
	3, // 2: stock_trader.ActionsResponse.company:type_name -> google.protobuf.StringValue
	3, // 3: stock_trader.ActionsResponse.action_type:type_name -> google.protobuf.StringValue
	4, // 4: stock_trader.ActionsResponse.current_value:type_name -> google.protobuf.DoubleValue
	3, // 5: stock_trader.ActionsResponse.added_timestamp:type_name -> google.protobuf.StringValue
	5, // 6: stock_trader.ActionsResponse.is_deleted:type_name -> google.protobuf.BoolValue
	6, // 7: stock_trader.stock_trader.GetStatus:input_type -> google.protobuf.Empty
	6, // 8: stock_trader.stock_trader.GetActions:input_type -> google.protobuf.Empty
	0, // 9: stock_trader.stock_trader.GetStatus:output_type -> stock_trader.Status
	1, // 10: stock_trader.stock_trader.GetActions:output_type -> stock_trader.ActionsResponse
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_stock_trader_proto_init() }
func file_stock_trader_proto_init() {
	if File_stock_trader_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_stock_trader_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stock_trader_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stock_trader_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stock_trader_proto_goTypes,
		DependencyIndexes: file_stock_trader_proto_depIdxs,
		MessageInfos:      file_stock_trader_proto_msgTypes,
	}.Build()
	File_stock_trader_proto = out.File
	file_stock_trader_proto_rawDesc = nil
	file_stock_trader_proto_goTypes = nil
	file_stock_trader_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StockTraderClient is the client API for StockTrader service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StockTraderClient interface {
	// get status of thee service
	GetStatus(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*Status, error)
	// queries actions from table
	GetActions(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ActionsResponse, error)
}

type stockTraderClient struct {
	cc grpc.ClientConnInterface
}

func NewStockTraderClient(cc grpc.ClientConnInterface) StockTraderClient {
	return &stockTraderClient{cc}
}

func (c *stockTraderClient) GetStatus(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/stock_trader.stock_trader/GetStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stockTraderClient) GetActions(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ActionsResponse, error) {
	out := new(ActionsResponse)
	err := c.cc.Invoke(ctx, "/stock_trader.stock_trader/GetActions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StockTraderServer is the server API for StockTrader service.
type StockTraderServer interface {
	// get status of thee service
	GetStatus(context.Context, *emptypb.Empty) (*Status, error)
	// queries actions from table
	GetActions(context.Context, *emptypb.Empty) (*ActionsResponse, error)
}

// UnimplementedStockTraderServer can be embedded to have forward compatible implementations.
type UnimplementedStockTraderServer struct {
}

func (*UnimplementedStockTraderServer) GetStatus(context.Context, *emptypb.Empty) (*Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatus not implemented")
}
func (*UnimplementedStockTraderServer) GetActions(context.Context, *emptypb.Empty) (*ActionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActions not implemented")
}

func RegisterStockTraderServer(s *grpc.Server, srv StockTraderServer) {
	s.RegisterService(&_StockTrader_serviceDesc, srv)
}

func _StockTrader_GetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StockTraderServer).GetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stock_trader.stock_trader/GetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StockTraderServer).GetStatus(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _StockTrader_GetActions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StockTraderServer).GetActions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stock_trader.stock_trader/GetActions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StockTraderServer).GetActions(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _StockTrader_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stock_trader.stock_trader",
	HandlerType: (*StockTraderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStatus",
			Handler:    _StockTrader_GetStatus_Handler,
		},
		{
			MethodName: "GetActions",
			Handler:    _StockTrader_GetActions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stock_trader.proto",
}
